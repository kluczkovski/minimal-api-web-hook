// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webHookApi.Infrastructure;

#nullable disable

namespace webHookApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.Issue", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("PayLoadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Guid");

                    b.HasIndex("PayLoadId")
                        .IsUnique();

                    b.ToTable("Issue", (string)null);
                });

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.PayLoad", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Guid");

                    b.ToTable("PayLoad", (string)null);
                });

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.RepositoryGit", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<Guid>("PayLoadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.HasIndex("PayLoadId")
                        .IsUnique();

                    b.ToTable("Repository", (string)null);
                });

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.Sender", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PayLoadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Guid");

                    b.HasIndex("PayLoadId")
                        .IsUnique();

                    b.ToTable("Sender", (string)null);
                });

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.Issue", b =>
                {
                    b.HasOne("webHookApi.Domain.Entities.Payload.PayLoad", "PayLoad")
                        .WithOne("Issue")
                        .HasForeignKey("webHookApi.Domain.Entities.Payload.Issue", "PayLoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayLoad");
                });

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.RepositoryGit", b =>
                {
                    b.HasOne("webHookApi.Domain.Entities.Payload.PayLoad", "PayLoad")
                        .WithOne("RepositoryGit")
                        .HasForeignKey("webHookApi.Domain.Entities.Payload.RepositoryGit", "PayLoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayLoad");
                });

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.Sender", b =>
                {
                    b.HasOne("webHookApi.Domain.Entities.Payload.PayLoad", "PayLoad")
                        .WithOne("Sender")
                        .HasForeignKey("webHookApi.Domain.Entities.Payload.Sender", "PayLoadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayLoad");
                });

            modelBuilder.Entity("webHookApi.Domain.Entities.Payload.PayLoad", b =>
                {
                    b.Navigation("Issue")
                        .IsRequired();

                    b.Navigation("RepositoryGit")
                        .IsRequired();

                    b.Navigation("Sender")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
